/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package es.ulpgc.eii.diu;

import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

public class Frame extends javax.swing.JFrame {

    /**
     * Instance of DBConnector
     */
    DBConnector dbc;

    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableList = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        columnList = new javax.swing.JList<>();
        addBtn = new javax.swing.JButton();
        singleRadioBtn = new javax.swing.JRadioButton();
        singleIntRadioBtn = new javax.swing.JRadioButton();
        multiIntRadioBtn = new javax.swing.JRadioButton();
        clearBtn = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        connectMenuItem = new javax.swing.JMenuItem();
        separator = new javax.swing.JPopupMenu.Separator();
        closeMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DB Explorer");

        tableList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tableList);

        columnList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(columnList);

        addBtn.setText("Show");
        addBtn.setEnabled(false);
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        singleRadioBtn.setSelected(true);
        singleRadioBtn.setText("Single");
        singleRadioBtn.setEnabled(false);
        singleRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleRadioBtnActionPerformed(evt);
            }
        });

        singleIntRadioBtn.setText("Single Interval");
        singleIntRadioBtn.setEnabled(false);
        singleIntRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleIntRadioBtnActionPerformed(evt);
            }
        });

        multiIntRadioBtn.setText("Multiple Interval");
        multiIntRadioBtn.setEnabled(false);
        multiIntRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiIntRadioBtnActionPerformed(evt);
            }
        });

        clearBtn.setText("Clear");
        clearBtn.setEnabled(false);
        clearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBtnActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        connectMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        connectMenuItem.setText("Connect");
        connectMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(connectMenuItem);
        jMenu1.add(separator);

        closeMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        closeMenuItem.setText("Close");
        closeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(closeMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(singleIntRadioBtn)
                            .addComponent(multiIntRadioBtn)
                            .addComponent(singleRadioBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(addBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clearBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(singleRadioBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(singleIntRadioBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(multiIntRadioBtn)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearBtn)
                        .addGap(88, 88, 88))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Connect to database. Show login dialog and if connection is successful,
     * fill the table list with names of table
     * @param evt Connect menu item clicked
     */
    private void connectMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectMenuItemActionPerformed
        LoginDialog loginDlg = new LoginDialog(this);
        loginDlg.setVisible(true);
        if (loginDlg.isSuccess()) {
            fillTableList();
            singleRadioBtn.setEnabled(true);
            singleIntRadioBtn.setEnabled(true);
            multiIntRadioBtn.setEnabled(true);
            addBtn.setEnabled(true);
            clearBtn.setEnabled(true);
        }
    }//GEN-LAST:event_connectMenuItemActionPerformed

    /**
     * Fill column list with columns of selected tables of table list
     * @param evt button clicked
     */
    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        fillColumnList();
    }//GEN-LAST:event_addBtnActionPerformed

    /**
     * Change selection model to Single
     * @param evt radio button
     */
    private void singleRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleRadioBtnActionPerformed
        changeSelectionMode(0);
    }//GEN-LAST:event_singleRadioBtnActionPerformed

    /**
     * Change selection model to Single Interval
     * @param evt radio button
     */
    private void singleIntRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleIntRadioBtnActionPerformed
        changeSelectionMode(1);
    }//GEN-LAST:event_singleIntRadioBtnActionPerformed

    /**
     * Change selection model to Multiple Interval
     * @param evt radio button
     */
    private void multiIntRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiIntRadioBtnActionPerformed
        changeSelectionMode(2);
    }//GEN-LAST:event_multiIntRadioBtnActionPerformed

    /**
     * Clear the column list completely
     * @param evt button clicked
     */
    private void clearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBtnActionPerformed
        clearColumnList();
    }//GEN-LAST:event_clearBtnActionPerformed

    private void closeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_closeMenuItemActionPerformed

    /**
     * Method called after start of program. Creates new instance of DBConnector
     * and adds radio buttons to one group, default selected is Single
     */
    private void init() {
        dbc = new DBConnector();
        btnGroup.add(singleRadioBtn);
        btnGroup.add(singleIntRadioBtn);
        btnGroup.add(multiIntRadioBtn);
        singleRadioBtn.setSelected(true);
    }

    /**
     * Fills table list with values obtained from dbc result.
     */
    private void fillTableList() {
        Set<String> keys = dbc.getResult().keySet();
        String[] listData = keys.toArray(new String[keys.size()]);
        tableList.setListData(listData);
    }

    /**
     * Fills column list with values obtained from dbc result filtered
     * by selected tables.
     */
    private void fillColumnList() {
        List<String> selectedValuesList = tableList.getSelectedValuesList();
        List<String> result = new ArrayList<>();
        for (String table : selectedValuesList) {
            result.addAll(dbc.getResult().get(table)
                    .stream()
                    .map(e -> table.concat(".").concat(e))
                    .collect(Collectors.toList()));    
        }
        String[] listData = result.toArray(new String[result.size()]);
        columnList.setListData(listData);
    }

    /**
     * Change selection model based on chosen radio button.
     * @param i integer representation of selection model
     */
    private void changeSelectionMode(int i) {
        tableList.setSelectionMode(i);
        tableList.clearSelection();
    }

    /**
     * Clear all items from column list.
     */
    private void clearColumnList() {
        tableList.clearSelection();
        columnList.setListData(new String[] {});
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });       
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBtn;
    private javax.swing.ButtonGroup btnGroup;
    private javax.swing.JButton clearBtn;
    private javax.swing.JMenuItem closeMenuItem;
    private javax.swing.JList<String> columnList;
    private javax.swing.JMenuItem connectMenuItem;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton multiIntRadioBtn;
    private javax.swing.JPopupMenu.Separator separator;
    private javax.swing.JRadioButton singleIntRadioBtn;
    private javax.swing.JRadioButton singleRadioBtn;
    private javax.swing.JList<String> tableList;
    // End of variables declaration//GEN-END:variables
}
