/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package es.ulpgc.eii.diu;

import java.awt.Color;

/**
 *
 * @author David
 */
public class Frame extends javax.swing.JFrame {

    //counter of moves, simulates delay of mouse
    private int counter = 0;
    private final int DELAY = 5;
    
    /** Creates new form Frame */
    public Frame() {
        initComponents();
        init();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        optionPanel = new javax.swing.JPanel();
        foregroundColorLabel = new javax.swing.JLabel();
        foregroundColorComboBox = new javax.swing.JComboBox<>();
        backgroundColorLabel = new javax.swing.JLabel();
        backgroundColorComboBox = new javax.swing.JComboBox<>();
        drawingPanel = new es.ulpgc.eii.diu.DrawingPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simple drawing");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        optionPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        foregroundColorLabel.setText("Choose foreground color:");

        foregroundColorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "Blue", "Green", "Yellow", "Red", "White" }));
        foregroundColorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foregroundColorComboBoxActionPerformed(evt);
            }
        });

        backgroundColorLabel.setText("Choose background color:");

        backgroundColorComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Black", "Blue", "Green", "Yellow", "Red", "White" }));
        backgroundColorComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backgroundColorComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout optionPanelLayout = new javax.swing.GroupLayout(optionPanel);
        optionPanel.setLayout(optionPanelLayout);
        optionPanelLayout.setHorizontalGroup(
            optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(foregroundColorLabel)
                    .addComponent(backgroundColorLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(backgroundColorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(foregroundColorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(178, Short.MAX_VALUE))
        );
        optionPanelLayout.setVerticalGroup(
            optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(optionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(foregroundColorLabel)
                    .addComponent(foregroundColorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(optionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backgroundColorLabel)
                    .addComponent(backgroundColorComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        drawingPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        drawingPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                drawingPanelMouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                drawingPanelMouseMoved(evt);
            }
        });
        drawingPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                drawingPanelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout drawingPanelLayout = new javax.swing.GroupLayout(drawingPanel);
        drawingPanel.setLayout(drawingPanelLayout);
        drawingPanelLayout.setHorizontalGroup(
            drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        drawingPanelLayout.setVerticalGroup(
            drawingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 249, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(drawingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(optionPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(optionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(drawingPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Sets initial values, black color for foreground and white color
     * for background.
     */
    private void init() {
        drawingPanel.setForeground(Color.BLACK);
        drawingPanel.setBackground(Color.WHITE);
        foregroundColorComboBox.setSelectedItem("Black");
        backgroundColorComboBox.setSelectedItem("White");
    }

    /**
     * Change of color to draw
     * Change the color based on selected item in the ComboBox
     * @param evt Change of selected item
     */
    private void foregroundColorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foregroundColorComboBoxActionPerformed
        String color = foregroundColorComboBox.getSelectedItem().toString();      
        drawingPanel.setForegroundFromString(color.toLowerCase());
    }//GEN-LAST:event_foregroundColorComboBoxActionPerformed

    /**
     * Change of color for backgroundArea
     * Change the color based on selected item in the ComboBox
     * @param evt Change of selected item
     */
    private void backgroundColorComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backgroundColorComboBoxActionPerformed
        String color = backgroundColorComboBox.getSelectedItem().toString();      
        drawingPanel.setBackgroundFromString(color.toLowerCase());
    }//GEN-LAST:event_backgroundColorComboBoxActionPerformed

    /**
     * Move of mouse without click of button
     * @param evt Move of mouse
     */
    private void drawingPanelMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPanelMouseMoved
        moveMouse(evt.getX(), evt.getY());
    }//GEN-LAST:event_drawingPanelMouseMoved

    /**
     * Mouse is out of drawing area
     * @param evt Mouse exited drawing area
     */
    private void drawingPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPanelMouseExited
        drawingPanel.clearQueue();
        drawingPanel.repaint();
    }//GEN-LAST:event_drawingPanelMouseExited

    /**
     * Move of mouse with click of button
     * @param evt Drag of mouse
     */
    private void drawingPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPanelMouseDragged
        moveMouse(evt.getX(), evt.getY());
    }//GEN-LAST:event_drawingPanelMouseDragged

    /** 
     * On mouse move show the dots.
     * Since the move event is called very often, to simulate delay,
     * the action is called only on every fifth event.
     * It adds the actual position of mouse to queue of positions 
     * and calls the repaint method.
     * @param x X-coordinate of mouse
     * @param y Y-coordinate of mouse
     */
    private void moveMouse(int x, int y) {
        counter++;
        if (counter == DELAY) {
            counter = 0;
            drawingPanel.addToQueue(x, y);
            drawingPanel.repaint();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> backgroundColorComboBox;
    private javax.swing.JLabel backgroundColorLabel;
    private es.ulpgc.eii.diu.DrawingPanel drawingPanel;
    private javax.swing.JComboBox<String> foregroundColorComboBox;
    private javax.swing.JLabel foregroundColorLabel;
    private javax.swing.JPanel optionPanel;
    // End of variables declaration//GEN-END:variables
}
